// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  USER
}

enum State {
  SOON
  IN_PROGRESS
  COMPLETED
}

model User {
  id       Int         @id @default(autoincrement())
  email    String      @unique
  name     String?
  password String
  role     Role        @default(USER)
  car      Car[]
  messages Message[]
  trips    UserTrips[]
  Trip     Trip[]
}

model Car {
  id      Int    @id @default(autoincrement())
  nbPlate String @unique
  color   String
  model   String
  user    User   @relation(fields: [userId], references: [id])
  userId  Int    @unique
}

model Message {
  id      Int      @id @default(autoincrement())
  content String
  date    DateTime @default(now())
  user    User?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId  Int      @unique
  trip    Trip?    @relation(fields: [tripId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tripId  Int      @unique
}

model Trip {
  id          Int         @id @default(autoincrement())
  duree       String
  departureId Int
  date        DateTime
  driver      User        @relation(fields: [userId], references: [id])
  userId      Int         @unique
  state       State       @default(SOON)
  message     Message[]
  passengers  UserTrips[]

  @@index([userId])
}

model Adress {
  id      Int     @id @default(autoincrement())
  city    String
  zipCode Int
  street  String
  long    String
  lat     String
  start   Boolean
}

model UserTrips {
  user   User? @relation(fields: [userId], references: [id])
  userId Int   @unique
  trip   Trip  @relation(fields: [tripId], references: [id])
  tripId Int   @unique
}
