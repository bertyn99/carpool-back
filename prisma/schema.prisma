generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       Int         @id @default(autoincrement())
  email    String      @unique
  name     String?
  password String
  tel      String      @unique
  role     Role        @default(USER)
  avatar   String?
  car      Car?
  messages Message[]
  trips    UserTrips[]
  Trip     Trip[]
}

model Car {
  id      Int    @id @default(autoincrement())
  nbPlate String @unique
  color   String
  model   String
  userId  Int    @unique
  user    User   @relation(fields: [userId], references: [id])
}

model Message {
  id      Int      @id @default(autoincrement())
  content String
  date    DateTime @default(now())
  userId  Int      @unique
  tripId  Int      @unique
  user    User?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  trip    Trip?    @relation(fields: [tripId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Trip {
  id              Int         @id @default(autoincrement())
  duree           String
  start_addressId Int?
  end_addressId   Int?
  date            DateTime
  nb_passengers   Int         @default(0)
  userId          Int         @unique
  state           State       @default(SOON)
  price           Float       @default(0)
  start_address   Adress?     @relation("start", fields: [start_addressId], references: [id])
  end_address     Adress?     @relation("end", fields: [end_addressId], references: [id])
  steps           Step[]
  driver          User        @relation(fields: [userId], references: [id])
  message         Message[]
  passengers      UserTrips[]

  @@index([userId])
  @@index([start_addressId])
  @@index([end_addressId])
}

model Adress {
  id         Int    @id @default(autoincrement())
  city       String
  zipCode    Int
  street     String
  long       String
  lat        String
  Step       Step[]
  start_trip Trip[] @relation("start")
  end_Trip   Trip[] @relation("end")
}

model Step {
  id       Int     @id @default(autoincrement())
  adressId Int?    @unique
  tripId   Int?
  adress   Adress? @relation(fields: [adressId], references: [id])
  Trip     Trip?   @relation(fields: [tripId], references: [id])

  @@index([tripId])
}

model UserTrips {
  userId Int   @unique
  tripId Int   @unique
  user   User? @relation(fields: [userId], references: [id])
  trip   Trip  @relation(fields: [tripId], references: [id])
}

enum Role {
  ADMIN
  USER
}

enum State {
  SOON
  IN_PROGRESS
  COMPLETED
}
