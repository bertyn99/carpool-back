// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  ADMIN
  USER
}

enum State {
  SOON
  IN_PROGRESS
  COMPLETED
}

model User {
  id       Int         @id @default(autoincrement())
  email    String      @unique
  name     String?
  password String
  role     Role        @default(USER)
  car      Car[]
  messages Message[]
  trips    UserTrips[]
  Trip     Trip[]
}

model Car {
  id      Int    @id @default(autoincrement())
  nbPlate String @unique
  color   String
  model   String
  user    User   @relation(fields: [userId], references: [id])
  userId  Int    @unique
}

model Message {
  id      Int      @id @default(autoincrement())
  content String
  date    DateTime @default(now())
  user    User?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId  Int      @unique
  trip    Trip?    @relation(fields: [tripId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tripId  Int      @unique
}

model Trip {
  id              Int         @id @default(autoincrement())
  duree           String
  start_address   Adress?     @relation("start", fields: [start_addressId], references: [id])
  start_addressId Int?
  end_address     Adress?     @relation("end", fields: [end_addressId], references: [id])
  end_addressId   Int?
  steps           Step[]
  date            DateTime
  driver          User        @relation(fields: [userId], references: [id])
  userId          Int         @unique
  state           State       @default(SOON)
  message         Message[]
  passengers      UserTrips[]

  @@index([userId])
  @@index([start_addressId])
  @@index([end_addressId])
}

model Adress {
  id      Int    @id @default(autoincrement())
  city    String
  zipCode Int
  street  String
  long    String
  lat     String
  Step    Step[]

  start_trip Trip[] @relation("start")
  end_Trip   Trip[] @relation("end")
}

model Step {
  id       Int     @id @default(autoincrement())
  adress   Adress? @relation(fields: [adressId], references: [id])
  adressId Int?    @unique
  Trip     Trip?   @relation(fields: [tripId], references: [id])
  tripId   Int?

  @@index([tripId])
}

model UserTrips {
  user   User? @relation(fields: [userId], references: [id])
  userId Int   @unique
  trip   Trip  @relation(fields: [tripId], references: [id])
  tripId Int   @unique
}
